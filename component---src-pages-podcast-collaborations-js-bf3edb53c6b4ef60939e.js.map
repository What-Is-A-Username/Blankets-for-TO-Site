{"version":3,"file":"component---src-pages-podcast-collaborations-js-bf3edb53c6b4ef60939e.js","mappings":"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","sources":["webpack://blankets-for-to-site/./node_modules/react-feather/dist/icons/chevron-left.js","webpack://blankets-for-to-site/./src/components/back-arrow.js","webpack://blankets-for-to-site/./src/components/back-arrow.module.css","webpack://blankets-for-to-site/./src/components/blog_embeds/spotify-embed.js","webpack://blankets-for-to-site/./src/components/blog_embeds/spotify-embed.module.css","webpack://blankets-for-to-site/./src/components/header-image.js","webpack://blankets-for-to-site/./src/components/header-image.module.css","webpack://blankets-for-to-site/./src/components/blog_embeds/youtube-embed.js","webpack://blankets-for-to-site/./src/components/blog_embeds/youtube-embed.module.css","webpack://blankets-for-to-site/./src/pages/podcast-collaborations.js","webpack://blankets-for-to-site/./src/page-styles/podcasts.module.css"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nvar ChevronLeft = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"15 18 9 12 15 6\"\n  }));\n});\nChevronLeft.displayName = 'ChevronLeft';\nexport default ChevronLeft;","import React from 'react'\r\nimport { arrowStyles } from './back-arrow.module.css'\r\nimport { ChevronLeft } from 'react-feather';\r\n\r\nconst BackArrow = ({text, link}) => \r\n{\r\n    return(\r\n        <a href={link} className={arrowStyles}>\r\n            <ChevronLeft/>\r\n            {text}\r\n        </a>\r\n    )\r\n}   \r\n\r\nexport default BackArrow","// extracted by mini-css-extract-plugin\nexport var arrowStyles = \"back-arrow-module--arrowStyles--ed188\";","import React from 'react'\r\nimport { iframeParent } from './spotify-embed.module.css'\r\n\r\nconst SpotifyEmbed = ({data}) =>\r\n{\r\n    const { link } = data\r\n    var frameSrc = link.replace('episode', 'embed-podcast/episode').split('?')[0];\r\n    return (\r\n        <div className={iframeParent}>\r\n            {console.warn('iframe missing a unique `title` attribute')}\r\n            <iframe src={frameSrc} width=\"100%\" height=\"232\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpotifyEmbed","// extracted by mini-css-extract-plugin\nexport var iframeParent = \"spotify-embed-module--iframeParent--f7a6b\";","import React from 'react'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport Animation from '../components/animate/animation'\r\nimport { parent, fluidImage, textBox, title, subtitle } from './header-image.module.css'\r\n\r\nconst HeaderImage = ({imgFluid, headerTitle, headerSubtitle}) => {\r\n\treturn (\r\n\t\t<div className={parent}>\r\n            <GatsbyImage image={imgFluid} className={fluidImage} alt={`Header image for ${headerTitle}`}/>\r\n            <div className={textBox}>\r\n                <Animation fade>\r\n                    <h1 className={title}>{headerTitle}</h1>\r\n                    {(headerSubtitle === undefined || headerSubtitle !== \"\") ? <p className={subtitle}>{headerSubtitle}</p> : <p/>}\r\n                </Animation>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderImage","// extracted by mini-css-extract-plugin\nexport var fluidImage = \"header-image-module--fluidImage--55cc4\";\nexport var parent = \"header-image-module--parent--fa4fc\";\nexport var stripe = \"header-image-module--stripe--1fcd0\";\nexport var subtitle = \"header-image-module--subtitle--5b149\";\nexport var textBox = \"header-image-module--textBox--79e28\";\nexport var title = \"header-image-module--title--b14b3\";","import React from 'react'\r\nimport { iframeParent } from './youtube-embed.module.css'\r\n\r\nconst YoutubeEmbed = ({data}) =>\r\n{\r\n    const { watchKey } = data\r\n    return (\r\n        <div className={iframeParent}>\r\n            {console.warn('iframe missing a unique `title` attribute')}\r\n            <iframe src={`https://www.youtube.com/embed/${watchKey}`} width=\"560\" height=\"315\" frameBorder=\"0\"></iframe>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default YoutubeEmbed","// extracted by mini-css-extract-plugin\nexport var iframeParent = \"youtube-embed-module--iframeParent--f6346\";","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport SEO from '../components/SEO'\r\nimport Layout from '../components/layout'\r\n\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\"\r\nimport { BLOCKS } from '@contentful/rich-text-types';\r\n\r\nimport BackArrow from '../components/back-arrow'\r\nimport HeaderImage from '../components/header-image'\r\nimport SpotifyEmbed from '../components/blog_embeds/spotify-embed'\r\nimport YoutubeEmbed from '../components/blog_embeds/youtube-embed'\r\n\r\nimport * as styles from '../page-styles/podcasts.module.css'\r\n\r\nclass PodcastCollaborations extends React.Component {\r\n\trender() {\r\n\r\n\t\tconst imgFluid = get(this, 'props.data.allContentfulHeaderImage.nodes[0].image.gatsbyImageData')\r\n        const headerSubtitle = 'View podcasts featuring guest appearances of some of our members.'\r\n        const headerTitle = 'Podcast Collaborations'\r\n\r\n        const podcasts = get(this, 'props.data.allContentfulPodcastCollaboration.nodes')\r\n        \r\n        const all_references = [].concat.apply([], podcasts.map(x => x.richDescription.references))\r\n        const assets = new Map(all_references.map(ref => [ref.contentful_id,ref]))\r\n\t\tconst options = {\r\n\t\t\trenderNode: {\r\n                [BLOCKS.EMBEDDED_ENTRY]: (node) => {\r\n                    const data = assets.get(node.data.target.sys.id)\r\n                    if (data.internal.type === 'ContentfulSpotifyEmbed') {\r\n\t\t\t\t\t\treturn(<SpotifyEmbed data={data}/>)\r\n\t\t\t\t\t} else if (data.internal.type === 'ContentfulYoutubeEmbed') {\r\n                        return <YoutubeEmbed data={data}/>\r\n                    }\r\n                }, \r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<Layout location={this.props.location}>\r\n\t\t\t\t<SEO title='Browse podcasts collaborations with us'\r\n\t\t\t\t\tdescription='View podcasts featuring guest appearances of some of our Blankets for T.O. members.'\r\n                    doNotCrawl/>\r\n\t\t\t\t<div className=\"white-background\">\r\n                    <HeaderImage imgFluid={imgFluid} headerTitle={headerTitle} headerSubtitle={headerSubtitle}/>\r\n\t\t\t\t\t<div className=\"wrapper\">\r\n                        {\r\n                            podcasts.map( x => \r\n                                {\r\n                                    return(\r\n                                        <React.Fragment>\r\n                                            <h1 className={styles.podcastTitle}>{x.episodeName}</h1>\r\n                                            <div className='richText'>\r\n                                                {x.richDescription.raw !== undefined ? documentToReactComponents(JSON.parse(x.richDescription.raw), options) : <p>Error: Articles not found.</p>}\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                        <BackArrow text='Browse all podcasts' link='/podcasts'/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default PodcastCollaborations\r\n\r\nexport const podcastCollaborationsQuery = graphql`\r\n\tquery PodcastCollaborationsQuery {\r\n\t\tallContentfulHeaderImage(filter: {pageName: {eq: \"Podcasts\"}}, limit: 1) {\r\n            nodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n                        layout: FULL_WIDTH\r\n                        placeholder: BLURRED\r\n                    )\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        allContentfulPodcastCollaboration {\r\n            nodes {\r\n                episodeName\r\n                richDescription {\r\n                    raw\r\n                    references {\r\n                      ... on ContentfulSpotifyEmbed {\r\n                        id\r\n                        contentful_id\r\n                        internal {\r\n                          type\r\n                        }\r\n                        link\r\n                        accessibilityDescription\r\n                      }\r\n                      ... on ContentfulYoutubeEmbed {\r\n                        id\r\n                        contentful_id\r\n                        internal {\r\n                          type\r\n                        }\r\n                        watchKey\r\n                        accessibilityDescription\r\n                      }\r\n                    }\r\n                  }\r\n                  publishDate\r\n            }\r\n        }\r\n\t}\r\n`\r\n\r\n","// extracted by mini-css-extract-plugin\nexport var podcastTitle = \"podcasts-module--podcastTitle--0fce6\";\nexport var title = \"podcasts-module--title--59f73\";"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronLeft","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","displayName","text","link","href","className","frameSrc","data","replace","split","console","warn","src","frameBorder","allowtransparency","allow","imgFluid","headerTitle","headerSubtitle","G","image","alt","fade","undefined","watchKey","PodcastCollaborations","render","get","podcasts","all_references","concat","map","x","richDescription","references","assets","Map","contentful_id","options","renderNode","BLOCKS","node","sys","id","internal","type","location","props","SEO","title","description","doNotCrawl","styles","episodeName","raw","documentToReactComponents","JSON","parse","React","podcastTitle"],"sourceRoot":""}