{"version":3,"file":"component---src-pages-podcast-collaborations-js-5588336270e67956d01a.js","mappings":"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","sources":["webpack://blankets-for-to-site/./src/components/back-arrow.js","webpack://blankets-for-to-site/./src/components/back-arrow.module.css","webpack://blankets-for-to-site/./src/components/blog_embeds/spotify-embed.js","webpack://blankets-for-to-site/./src/components/blog_embeds/spotify-embed.module.css","webpack://blankets-for-to-site/./src/components/blog_embeds/youtube-embed.js","webpack://blankets-for-to-site/./src/components/blog_embeds/youtube-embed.module.css","webpack://blankets-for-to-site/./src/pages/podcast-collaborations.js","webpack://blankets-for-to-site/./src/page-styles/podcasts.module.css","webpack://blankets-for-to-site/./node_modules/react-feather/dist/icons/chevron-left.js"],"sourcesContent":["import React from 'react'\r\nimport { arrowStyles } from './back-arrow.module.css'\r\nimport { ChevronLeft } from 'react-feather';\r\n\r\nconst BackArrow = ({text, link}) => \r\n{\r\n    return(\r\n        <a href={link} className={arrowStyles}>\r\n            <ChevronLeft/>\r\n            {text}\r\n        </a>\r\n    )\r\n}   \r\n\r\nexport default BackArrow","// extracted by mini-css-extract-plugin\nexport var arrowStyles = \"back-arrow-module--arrowStyles--ed188\";","import React from 'react'\r\nimport { iframeParent } from './spotify-embed.module.css'\r\n\r\nconst SpotifyEmbed = ({data}) =>\r\n{\r\n    const { link } = data\r\n    var frameSrc = link.replace('episode', 'embed-podcast/episode').split('?')[0];\r\n    return (\r\n        <div className={iframeParent}>\r\n            {console.warn('iframe missing a unique `title` attribute')}\r\n            <iframe src={frameSrc} width=\"100%\" height=\"232\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpotifyEmbed","// extracted by mini-css-extract-plugin\nexport var iframeParent = \"spotify-embed-module--iframeParent--f7a6b\";","import React from 'react'\r\nimport { iframeParent } from './youtube-embed.module.css'\r\n\r\nconst YoutubeEmbed = ({data}) =>\r\n{\r\n    const { watchKey } = data\r\n    return (\r\n        <div className={iframeParent}>\r\n            {console.warn('iframe missing a unique `title` attribute')}\r\n            <iframe src={`https://www.youtube.com/embed/${watchKey}`} width=\"560\" height=\"315\" frameBorder=\"0\"></iframe>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default YoutubeEmbed","// extracted by mini-css-extract-plugin\nexport var iframeParent = \"youtube-embed-module--iframeParent--f6346\";","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport SEO from '../components/SEO'\r\nimport Layout from '../components/layout'\r\n\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\"\r\nimport { BLOCKS } from '@contentful/rich-text-types';\r\n\r\nimport BackArrow from '../components/back-arrow'\r\nimport HeaderImage from '../components/header-image'\r\nimport SpotifyEmbed from '../components/blog_embeds/spotify-embed'\r\nimport YoutubeEmbed from '../components/blog_embeds/youtube-embed'\r\n\r\nimport * as styles from '../page-styles/podcasts.module.css'\r\n\r\nclass PodcastCollaborations extends React.Component {\r\n\trender() {\r\n\r\n\t\tconst imgFluid = get(this, 'props.data.allContentfulHeaderImage.nodes[0].image.gatsbyImageData')\r\n        const headerSubtitle = 'View podcasts featuring guest appearances of some of our members.'\r\n        const headerTitle = 'Podcast Collaborations'\r\n\r\n        const podcasts = get(this, 'props.data.allContentfulPodcastCollaboration.nodes')\r\n        \r\n        const all_references = [].concat.apply([], podcasts.map(x => x.richDescription.references))\r\n        const assets = new Map(all_references.map(ref => [ref.contentful_id,ref]))\r\n\t\tconst options = {\r\n\t\t\trenderNode: {\r\n                [BLOCKS.EMBEDDED_ENTRY]: (node) => {\r\n                    const data = assets.get(node.data.target.sys.id)\r\n                    if (data.internal.type === 'ContentfulSpotifyEmbed') {\r\n\t\t\t\t\t\treturn(<SpotifyEmbed data={data}/>)\r\n\t\t\t\t\t} else if (data.internal.type === 'ContentfulYoutubeEmbed') {\r\n                        return <YoutubeEmbed data={data}/>\r\n                    }\r\n                }, \r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<Layout location={this.props.location}>\r\n\t\t\t\t<SEO title='Browse podcasts collaborations with us'\r\n\t\t\t\t\tdescription='View podcasts featuring guest appearances of some of our Blankets for T.O. members.'\r\n                    doNotCrawl/>\r\n\t\t\t\t<div className=\"white-background\">\r\n                    <HeaderImage imgFluid={imgFluid} headerTitle={headerTitle} headerSubtitle={headerSubtitle}/>\r\n\t\t\t\t\t<div className=\"wrapper\">\r\n                        {\r\n                            podcasts.map( x => \r\n                                {\r\n                                    return(\r\n                                        <React.Fragment>\r\n                                            <h1 className={styles.podcastTitle}>{x.episodeName}</h1>\r\n                                            <div className='richText'>\r\n                                                {x.richDescription.raw !== undefined ? documentToReactComponents(JSON.parse(x.richDescription.raw), options) : <p>Error: Articles not found.</p>}\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                        <BackArrow text='Browse all podcasts' link='/podcasts'/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default PodcastCollaborations\r\n\r\nexport const podcastCollaborationsQuery = graphql`\r\n\tquery PodcastCollaborationsQuery {\r\n\t\tallContentfulHeaderImage(filter: {pageName: {eq: \"Podcasts\"}}, limit: 1) {\r\n            nodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n                        layout: FULL_WIDTH\r\n                        placeholder: BLURRED\r\n                    )\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        allContentfulPodcastCollaboration {\r\n            nodes {\r\n                episodeName\r\n                richDescription {\r\n                    raw\r\n                    references {\r\n                      ... on ContentfulSpotifyEmbed {\r\n                        id\r\n                        contentful_id\r\n                        internal {\r\n                          type\r\n                        }\r\n                        link\r\n                        accessibilityDescription\r\n                      }\r\n                      ... on ContentfulYoutubeEmbed {\r\n                        id\r\n                        contentful_id\r\n                        internal {\r\n                          type\r\n                        }\r\n                        watchKey\r\n                        accessibilityDescription\r\n                      }\r\n                    }\r\n                  }\r\n                  publishDate\r\n            }\r\n        }\r\n\t}\r\n`\r\n\r\n","// extracted by mini-css-extract-plugin\nexport var podcastTitle = \"podcasts-module--podcastTitle--0fce6\";\nexport var title = \"podcasts-module--title--59f73\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronLeft = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"15 18 9 12 15 6\"\n  }));\n});\nChevronLeft.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronLeft.displayName = 'ChevronLeft';\nexport default ChevronLeft;"],"names":["_ref","text","link","React","href","className","ChevronLeft","frameSrc","data","replace","split","console","warn","src","width","height","frameBorder","allowtransparency","allow","watchKey","PodcastCollaborations","_React$Component","apply","arguments","_inheritsLoose","prototype","render","_renderNode","imgFluid","get","this","podcasts","all_references","concat","map","x","richDescription","references","assets","Map","ref","contentful_id","options","renderNode","BLOCKS","EMBEDDED_ENTRY","node","target","sys","id","internal","type","SpotifyEmbed","YoutubeEmbed","Layout","location","props","SEO","title","description","doNotCrawl","HeaderImage","headerTitle","headerSubtitle","styles","episodeName","undefined","raw","documentToReactComponents","JSON","parse","BackArrow","podcastTitle","_extends","Object","assign","i","length","source","key","hasOwnProperty","call","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","forwardRef","_ref$color","color","_ref$size","size","rest","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","displayName"],"sourceRoot":""}