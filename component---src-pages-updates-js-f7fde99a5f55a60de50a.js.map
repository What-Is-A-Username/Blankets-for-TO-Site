{"version":3,"file":"component---src-pages-updates-js-f7fde99a5f55a60de50a.js","mappings":"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","sources":["webpack://blankets-for-to-site/./node_modules/react-feather/dist/icons/chevron-right.js","webpack://blankets-for-to-site/./src/components/header-image.js","webpack://blankets-for-to-site/./src/components/header-image.module.css","webpack://blankets-for-to-site/./src/components/layouts/square-grid-item.js","webpack://blankets-for-to-site/./src/components/layouts/square-grid.module.css","webpack://blankets-for-to-site/./src/components/layouts/square-grid.js","webpack://blankets-for-to-site/./src/pages/updates.js"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar ChevronRight = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"9 18 15 12 9 6\"\n  }));\n});\nChevronRight.displayName = 'ChevronRight';\nexport default ChevronRight;","import React from 'react'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport Animation from '../components/animate/animation'\r\nimport * as styles from './header-image.module.css'\r\n\r\nconst HeaderImage = ({imgFluid, headerTitle, headerSubtitle}) => {\r\n\treturn (\r\n\t\t<div className={styles.parent}>\r\n            <GatsbyImage image={imgFluid} className={styles.fluidImage} alt={`Header image for ${headerTitle}`}/>\r\n            <div className={styles.textBox}>\r\n                <Animation fade>\r\n                    <h1 className={styles.title}>{headerTitle}</h1>\r\n                    {(headerSubtitle === undefined || headerSubtitle !== \"\") ? <p className={styles.subtitle}>{headerSubtitle}</p> : <p/>}\r\n                </Animation>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderImage","// extracted by mini-css-extract-plugin\nexport var fluidImage = \"header-image-module--fluidImage--VcxNc\";\nexport var parent = \"header-image-module--parent--+k-Gi\";\nexport var stripe = \"header-image-module--stripe--H80IG\";\nexport var subtitle = \"header-image-module--subtitle--WxSQc\";\nexport var textBox = \"header-image-module--textBox--eeKBu\";\nexport var title = \"header-image-module--title--sUs+3\";","import React from 'react'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport * as styles from './square-grid.module.css'\r\nimport { ChevronRight } from 'react-feather'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SquareGridItem = ({itemData}) => \r\n{\r\n    const { title, description, link, gatsbyImageData } = itemData \r\n\r\n    return(\r\n        <div className={styles.tile} key={title}>\r\n            <div className={styles.imageOverlay}>\r\n                <GatsbyImage image={gatsbyImageData} style={{width: \"100%\", height: \"100%\"}} alt={`Image preview of ${title}`}/>\r\n            </div>\r\n            <div className={styles.textBox}>\r\n                <h1 className={styles.title}>{title}<ChevronRight/></h1>\r\n                <p className={styles.description}>{description}</p>\r\n            </div>\r\n            <a className={styles.link} href={link}></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nSquareGridItem.propTypes = {\r\n    itemData: PropTypes.shape({\r\n                title: PropTypes.string.isRequired,\r\n                description: PropTypes.string,\r\n                link: PropTypes.string.isRequired,\r\n                gatsbyImageData: PropTypes.any,\r\n        }).isRequired\r\n}\r\n\r\nexport default SquareGridItem","// extracted by mini-css-extract-plugin\nexport var description = \"square-grid-module--description--kuDKZ\";\nexport var gridContainer = \"square-grid-module--gridContainer--MCqMX\";\nexport var imageOverlay = \"square-grid-module--imageOverlay--PBQTj\";\nexport var link = \"square-grid-module--link--hP20w\";\nexport var textBox = \"square-grid-module--textBox--SHdhQ\";\nexport var tile = \"square-grid-module--tile--gCDlt\";\nexport var title = \"square-grid-module--title--Dm3jn\";","import React from 'react'\r\nimport SquareGridItem from \"./square-grid-item\"\r\nimport * as styles from './square-grid.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SquareGrid = ({content}) => \r\n{\r\n    return(\r\n        <div className={styles.gridContainer}>\r\n            {\r\n                content.map((x, index) => {\r\n                    return(\r\n                        <SquareGridItem key={index} itemData={x}/>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nSquareGrid.propTypes = {\r\n    content: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            title: PropTypes.string.isRequired,\r\n            description: PropTypes.string,\r\n            link: PropTypes.string.isRequired,\r\n            gatsbyImageData: PropTypes.any,\r\n        })\r\n    ).isRequired\r\n}\r\n    \r\nexport default SquareGrid","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport SEO from '../components/SEO'\r\nimport Layout from '../components/layout'\r\nimport HeaderImage from '../components/header-image'\r\nimport SquareGrid from '../components/layouts/square-grid'\r\n\r\nclass Updates extends React.Component {\r\n\trender() {\r\n\t\tconst imgFluid = get(this, 'props.data.updateHeader.nodes[0].image.gatsbyImageData')\r\n\t\tconst headerTitle = 'Updates'\r\n\t\tconst headerSubtitle = ''\r\n\t\t\r\n        const content = [ \r\n            {\r\n                title: \"Read our blog\",\r\n                link: \"/blog\",\r\n                description: \"Read about past initiatives, current news and educational content from Blankets for T.O.\",\r\n                gatsbyImageData: get(this, 'props.data.blogHeader.nodes[0].image.gatsbyImageData'),\r\n            },\r\n            {\r\n                title: \"Listen to our official podcast\",\r\n                link: \"/podcasts\",\r\n                description: \"Learn about homelessness in Toronto and how Blankets for T.O. was founded.\",\r\n                gatsbyImageData: get(this, 'props.data.podcastsHeader.nodes[0].image.gatsbyImageData'),\r\n            },\r\n            {\r\n                title: \"Follow on social media\",\r\n                link: \"/contact\",\r\n                description: \"Follow us on social media for the quickest way to access announcements and news.\",\r\n                gatsbyImageData: get(this, 'props.data.contactHeader.nodes[0].image.gatsbyImageData'),\r\n            }\r\n        ]\r\n\r\n\t\treturn (\r\n\t\t\t<Layout location={this.props.location}>\r\n\t\t\t\t<SEO title='Keep updated with Blankets for T.O.'\r\n\t\t\t\t\tdescription='Keep up to date with Blankets for T.O. by reading our blog, listening our podcasts, and following our social media.'\r\n                    doNotCrawl/>\r\n\t\t\t\t<div className=\"white-background\">\r\n\t\t\t\t\t<HeaderImage imgFluid={imgFluid} headerTitle={headerTitle} headerSubtitle={headerSubtitle}/>\r\n                    <div className=\"wrapper\">\r\n                        <div className='richText'>\r\n                            <p>\r\n                                Looking for information on Blankets for T.O. and homelessness? Looking for news on our recent initiatives and donations? Look no further than our blog, podcasts, and social media feeds!\r\n                            </p>\r\n                        </div>\r\n                        <SquareGrid content={content}/>\r\n                    </div>\t\t\t\r\n                </div> \r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Updates\r\n\r\nexport const updateQuery = graphql`\r\n\tquery UpdateQuery {\r\n        site {\r\n\t\t\tsiteMetadata {\r\n\t\t\t\ttitle\r\n\t\t\t}\r\n\t\t}\r\n\t\tupdateHeader : allContentfulHeaderImage(filter: {pageName: {eq: \"About\"}}, limit: 1) {\r\n\t\t\tnodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n\t\t\t\t\t\tlayout: FULL_WIDTH\r\n\t\t\t\t\t\tplaceholder: BLURRED\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        podcastsHeader : allContentfulHeaderImage(filter: {pageName: {eq: \"Podcasts\"}}, limit: 1) {\r\n\t\t\tnodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n\t\t\t\t\t\tlayout: FULL_WIDTH\r\n\t\t\t\t\t\tplaceholder: BLURRED\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        blogHeader : allContentfulHeaderImage(filter: {pageName: {eq: \"About\"}}, limit: 1) {\r\n\t\t\tnodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n\t\t\t\t\t\tlayout: FULL_WIDTH\r\n\t\t\t\t\t\tplaceholder: BLURRED\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        contactHeader : allContentfulHeaderImage(filter: {pageName: {eq: \"Positions\"}}, limit: 1) {\r\n\t\t\tnodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n\t\t\t\t\t\tlayout: FULL_WIDTH\r\n\t\t\t\t\t\tplaceholder: BLURRED\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronRight","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","displayName","imgFluid","headerTitle","headerSubtitle","className","G","image","alt","fade","undefined","itemData","title","description","link","gatsbyImageData","style","href","content","map","x","index","Updates","render","get","location","props","doNotCrawl","React"],"sourceRoot":""}