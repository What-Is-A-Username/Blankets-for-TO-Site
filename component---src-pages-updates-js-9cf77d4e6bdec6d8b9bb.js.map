{"version":3,"file":"component---src-pages-updates-js-9cf77d4e6bdec6d8b9bb.js","mappings":"kMAiCA,EA3BuB,SAAHA,GACnB,IADwBC,EAAQD,EAARC,SAEbC,EAA8CD,EAA9CC,MAAOC,EAAuCF,EAAvCE,YAAaC,EAA0BH,EAA1BG,KAAMC,EAAoBJ,EAApBI,gBAElC,OACIC,EAAAA,cAAA,OAAKC,UCLK,kCDKYC,IAAKN,GACvBI,EAAAA,cAAA,OAAKC,UCTS,2CDUVD,EAAAA,cAACG,EAAAA,EAAW,CAACC,MAAOL,EAAiBM,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAASC,IAAG,oBAAsBZ,KAE1GI,EAAAA,cAAA,OAAKC,UCVI,sCDWLD,EAAAA,cAAA,MAAIC,UCTI,yCDSoBL,EAAMI,EAAAA,cAACS,EAAAA,EAAY,OAC/CT,EAAAA,cAAA,KAAGC,UChBW,+CDgBmBJ,IAErCG,EAAAA,cAAA,KAAGC,UCfQ,uCDecS,KAAMZ,IAG3C,EESA,EA1BmB,SAAHJ,GACf,IADoBiB,EAAOjB,EAAPiB,QAEjB,OACIX,EAAAA,cAAA,OAAKC,UDNc,4CCQXU,EAAQC,KAAI,SAACC,EAAGC,GACZ,OACId,EAAAA,cAACe,EAAc,CAACb,IAAKY,EAAOnB,SAAUkB,GAE9C,IAIhB,C,iHCVMG,EAAO,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAmDX,OAnDWC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACZC,OAAA,WACC,IAAMC,EAAWC,IAAIC,KAAM,0DAIfd,EAAU,CACrB,CACaf,MAAO,wBACPE,KAAM,UACND,YAAa,qDACbE,gBAAiByB,IAAIC,KAAM,2DAE/B,CACI7B,MAAO,gBACPE,KAAM,QACND,YAAa,6EACbE,gBAAiByB,IAAIC,KAAM,yDAE/B,CACI7B,MAAO,iCACPE,KAAM,YACND,YAAa,4EACbE,gBAAiByB,IAAIC,KAAM,6DAE/B,CACI7B,MAAO,yBACPE,KAAM,WACND,YAAa,mFACbE,gBAAiByB,IAAIC,KAAM,6DAIzC,OACCzB,EAAAA,cAAC0B,EAAAA,EAAM,CAACC,SAAUF,KAAKG,MAAMD,UAC5B3B,EAAAA,cAAC6B,EAAAA,EAAG,CAACjC,MAAM,sCACVC,YAAY,sHACGiC,YAAU,IAC1B9B,EAAAA,cAAA,OAAKC,UAAU,oBACdD,EAAAA,cAAC+B,EAAAA,EAAW,CAACR,SAAUA,EAAUS,YApChB,UAoC0CC,eAnCvC,KAoCLjC,EAAAA,cAAA,OAAKC,UAAU,WACXD,EAAAA,cAAA,OAAKC,UAAU,YACXD,EAAAA,cAAA,SAAG,8LAIPA,EAAAA,cAACkC,EAAAA,EAAU,CAACvB,QAASA,MAK5C,EAACK,CAAA,CAnDW,CAAShB,EAAAA,WAsDtB,W,uDC9DA,SAASmC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,UAAUqB,OAAQD,IAAK,CAAE,IAAIE,EAAStB,UAAUoB,GAAI,IAAK,IAAIrC,KAAOuC,EAAcL,OAAOf,UAAUqB,eAAeC,KAAKF,EAAQvC,KAAQoC,EAAOpC,GAAOuC,EAAOvC,GAAU,CAAE,OAAOoC,CAAQ,EAAUH,EAASjB,MAAMO,KAAMN,UAAY,CAE5T,SAASyB,EAAyBH,EAAQI,GAAY,GAAc,MAAVJ,EAAgB,MAAO,CAAC,EAAG,IAAkEvC,EAAKqC,EAAnED,EAEzF,SAAuCG,EAAQI,GAAY,GAAc,MAAVJ,EAAgB,MAAO,CAAC,EAAG,IAA2DvC,EAAKqC,EAA5DD,EAAS,CAAC,EAAOQ,EAAaV,OAAOW,KAAKN,GAAqB,IAAKF,EAAI,EAAGA,EAAIO,EAAWN,OAAQD,IAAOrC,EAAM4C,EAAWP,GAAQM,EAASG,QAAQ9C,IAAQ,IAAaoC,EAAOpC,GAAOuC,EAAOvC,IAAQ,OAAOoC,CAAQ,CAFhNW,CAA8BR,EAAQI,GAAuB,GAAIT,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBT,GAAS,IAAKF,EAAI,EAAGA,EAAIY,EAAiBX,OAAQD,IAAOrC,EAAMiD,EAAiBZ,GAAQM,EAASG,QAAQ9C,IAAQ,GAAkBkC,OAAOf,UAAU+B,qBAAqBT,KAAKF,EAAQvC,KAAgBoC,EAAOpC,GAAOuC,EAAOvC,GAAQ,CAAE,OAAOoC,CAAQ,CAM3e,IAAI7B,GAAe,IAAA4C,aAAW,SAAU3D,EAAM4D,GAC5C,IAAIC,EAAa7D,EAAK8D,MAClBA,OAAuB,IAAfD,EAAwB,eAAiBA,EACjDE,EAAY/D,EAAKgE,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAOf,EAAyBlD,EAAM,CAAC,QAAS,SAEpD,OAAoB,gBAAoB,MAAOyC,EAAS,CACtDmB,IAAKA,EACLM,MAAO,6BACPtD,MAAOoD,EACPnD,OAAQmD,EACRG,QAAS,YACTC,KAAM,OACNC,OAAQP,EACRQ,YAAa,IACbC,cAAe,QACfC,eAAgB,SACfP,GAAoB,gBAAoB,WAAY,CACrDQ,OAAQ,mBAEZ,IACA1D,EAAa2D,UAAY,CACvBZ,MAAO,WACPE,KAAM,cAAoB,CAAC,WAAkB,cAE/CjD,EAAa4D,YAAc,eAC3B,K","sources":["webpack://blankets-for-to-site/./src/components/layouts/square-grid-item.js","webpack://blankets-for-to-site/./src/components/layouts/square-grid.module.css","webpack://blankets-for-to-site/./src/components/layouts/square-grid.js","webpack://blankets-for-to-site/./src/pages/updates.js","webpack://blankets-for-to-site/./node_modules/react-feather/dist/icons/chevron-right.js"],"sourcesContent":["import React from 'react'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport { tile, imageOverlay, textBox, titleStyle, descriptionStyle, linkStyle} from './square-grid.module.css'\r\nimport { ChevronRight } from 'react-feather'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SquareGridItem = ({itemData}) => \r\n{\r\n    const { title, description, link, gatsbyImageData } = itemData \r\n\r\n    return(\r\n        <div className={tile} key={title}>\r\n            <div className={imageOverlay}>\r\n                <GatsbyImage image={gatsbyImageData} style={{width: \"100%\", height: \"100%\"}} alt={`Image preview of ${title}`}/>\r\n            </div>\r\n            <div className={textBox}>\r\n                <h1 className={titleStyle}>{title}<ChevronRight/></h1>\r\n                <p className={descriptionStyle}>{description}</p>\r\n            </div>\r\n            <a className={linkStyle} href={link}></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nSquareGridItem.propTypes = {\r\n    itemData: PropTypes.shape({\r\n                title: PropTypes.string.isRequired,\r\n                description: PropTypes.string,\r\n                link: PropTypes.string.isRequired,\r\n                gatsbyImageData: PropTypes.any,\r\n        }).isRequired\r\n}\r\n\r\nexport default SquareGridItem","// extracted by mini-css-extract-plugin\nexport var descriptionStyle = \"square-grid-module--descriptionStyle--28a3e\";\nexport var gridContainer = \"square-grid-module--gridContainer--302a8\";\nexport var imageOverlay = \"square-grid-module--imageOverlay--3c141\";\nexport var linkStyle = \"square-grid-module--linkStyle--0c9c8\";\nexport var textBox = \"square-grid-module--textBox--48776\";\nexport var tile = \"square-grid-module--tile--8020e\";\nexport var titleStyle = \"square-grid-module--titleStyle--b134a\";","import React from 'react'\r\nimport SquareGridItem from \"./square-grid-item\"\r\nimport { gridContainer } from './square-grid.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SquareGrid = ({content}) => \r\n{\r\n    return(\r\n        <div className={gridContainer}>\r\n            {\r\n                content.map((x, index) => {\r\n                    return(\r\n                        <SquareGridItem key={index} itemData={x}/>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nSquareGrid.propTypes = {\r\n    content: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            title: PropTypes.string.isRequired,\r\n            description: PropTypes.string,\r\n            link: PropTypes.string.isRequired,\r\n            gatsbyImageData: PropTypes.any,\r\n        })\r\n    ).isRequired\r\n}\r\n    \r\nexport default SquareGrid","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport SEO from '../components/SEO'\r\nimport Layout from '../components/layout'\r\nimport HeaderImage from '../components/header-image'\r\nimport SquareGrid from '../components/layouts/square-grid'\r\n\r\nclass Updates extends React.Component {\r\n\trender() {\r\n\t\tconst imgFluid = get(this, 'props.data.updateHeader.nodes[0].image.gatsbyImageData')\r\n\t\tconst headerTitle = 'Updates'\r\n\t\tconst headerSubtitle = ''\r\n\t\t\r\n        const content = [ \r\n\t\t\t{\r\n                title: \"Check upcoming events\",\r\n                link: \"/events\",\r\n                description: \"Browse upcoming and recent events organized by us.\",\r\n                gatsbyImageData: get(this, 'props.data.eventsHeader.nodes[0].image.gatsbyImageData'),\r\n            },\r\n            {\r\n                title: \"Read our blog\",\r\n                link: \"/blog\",\r\n                description: \"Read about past initiatives, current news and educational content from us.\",\r\n                gatsbyImageData: get(this, 'props.data.blogHeader.nodes[0].image.gatsbyImageData'),\r\n            },\r\n            {\r\n                title: \"Listen to our official podcast\",\r\n                link: \"/podcasts\",\r\n                description: \"Learn about homelessness in Toronto and how our organization was founded.\",\r\n                gatsbyImageData: get(this, 'props.data.podcastsHeader.nodes[0].image.gatsbyImageData'),\r\n            },\r\n            {\r\n                title: \"Follow on social media\",\r\n                link: \"/contact\",\r\n                description: \"Follow us on social media for the quickest way to access announcements and news.\",\r\n                gatsbyImageData: get(this, 'props.data.contactHeader.nodes[0].image.gatsbyImageData'),\r\n            }\r\n        ]\r\n\r\n\t\treturn (\r\n\t\t\t<Layout location={this.props.location}>\r\n\t\t\t\t<SEO title='Keep updated with Blankets for T.O.'\r\n\t\t\t\t\tdescription='Keep up to date with Blankets for T.O. by reading our blog, listening our podcasts, and following our social media.'\r\n                    doNotCrawl/>\r\n\t\t\t\t<div className=\"white-background\">\r\n\t\t\t\t\t<HeaderImage imgFluid={imgFluid} headerTitle={headerTitle} headerSubtitle={headerSubtitle}/>\r\n                    <div className=\"wrapper\">\r\n                        <div className='richText'>\r\n                            <p>\r\n                                Looking for information on Blankets for T.O. and homelessness? Looking for news on our recent initiatives and donations? Look no further than our blog, podcasts, and social media feeds!\r\n                            </p>\r\n                        </div>\r\n                        <SquareGrid content={content}/>\r\n                    </div>\t\t\t\r\n                </div> \r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Updates\r\n\r\nexport const updateQuery = graphql`\r\n\tquery UpdateQuery {\r\n        site {\r\n\t\t\tsiteMetadata {\r\n\t\t\t\ttitle\r\n\t\t\t}\r\n\t\t}\r\n\t\teventsHeader : allContentfulHeaderImage(filter: {pageName: {eq: \"Events\"}}, limit: 1) {\r\n\t\t\tnodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n\t\t\t\t\t\tlayout: FULL_WIDTH\r\n\t\t\t\t\t\tplaceholder: BLURRED\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tupdateHeader : allContentfulHeaderImage(filter: {pageName: {eq: \"About\"}}, limit: 1) {\r\n\t\t\tnodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n\t\t\t\t\t\tlayout: FULL_WIDTH\r\n\t\t\t\t\t\tplaceholder: BLURRED\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        podcastsHeader : allContentfulHeaderImage(filter: {pageName: {eq: \"Podcasts\"}}, limit: 1) {\r\n\t\t\tnodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n\t\t\t\t\t\tlayout: FULL_WIDTH\r\n\t\t\t\t\t\tplaceholder: BLURRED\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        blogHeader : allContentfulHeaderImage(filter: {pageName: {eq: \"About\"}}, limit: 1) {\r\n\t\t\tnodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n\t\t\t\t\t\tlayout: FULL_WIDTH\r\n\t\t\t\t\t\tplaceholder: BLURRED\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        contactHeader : allContentfulHeaderImage(filter: {pageName: {eq: \"Positions\"}}, limit: 1) {\r\n\t\t\tnodes {\r\n\t\t\t\timage {\r\n\t\t\t\t\tgatsbyImageData(\r\n\t\t\t\t\t\tlayout: FULL_WIDTH\r\n\t\t\t\t\t\tplaceholder: BLURRED\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronRight = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"9 18 15 12 9 6\"\n  }));\n});\nChevronRight.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronRight.displayName = 'ChevronRight';\nexport default ChevronRight;"],"names":["_ref","itemData","title","description","link","gatsbyImageData","React","className","key","GatsbyImage","image","style","width","height","alt","ChevronRight","href","content","map","x","index","SquareGridItem","Updates","_React$Component","apply","arguments","_inheritsLoose","prototype","render","imgFluid","get","this","Layout","location","props","SEO","doNotCrawl","HeaderImage","headerTitle","headerSubtitle","SquareGrid","_extends","Object","assign","target","i","length","source","hasOwnProperty","call","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","forwardRef","ref","_ref$color","color","_ref$size","size","rest","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","displayName"],"sourceRoot":""}