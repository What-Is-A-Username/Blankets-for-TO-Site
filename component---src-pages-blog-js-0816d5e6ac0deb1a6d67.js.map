{"version":3,"sources":["webpack:///./src/page-styles/blog.module.css","webpack:///./src/components/blog-list.module.css","webpack:///./src/components/blog-list.js","webpack:///./src/pages/blog.js"],"names":["module","exports","article","onClick","navigate","slug","className","styles","alink","key","title","preview","previewTitle","previewPublishDate","publishDate","previewDescription","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html","BlogIndex","render","get","this","posts","location","props","SEO","style","padding","blog_list","map","node","React","Component"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,kC,qBCAhED,EAAOC,QAAU,CAAC,aAAe,wCAAwC,mBAAqB,8CAA8C,mBAAqB,8CAA8C,MAAQ,iCAAiC,QAAU,mCAAmC,IAAM,iC,qKCK5R,kBAAGC,EAAH,EAAGA,QAAH,OACX,uBAAGC,QAAS,kBAAMC,YAAS,SAASF,EAAQG,OAASC,UAAWC,IAAOC,MAAOC,IAAKP,EAAQQ,OACvF,yBAAKJ,UAAWC,IAAOI,SACnB,wBAAIL,UAAWC,IAAOK,cAAeV,EAAQQ,OAC7C,2BAAOJ,UAAWC,IAAOM,oBAAqBX,EAAQY,aACtD,yBAAKR,UAAWC,IAAOQ,mBACvBC,wBAAyB,CACrBC,OAAQf,EAAQgB,YAAYC,oBAAoBC,W,iCCJ1DC,E,0FACJC,OAAA,WACoBC,IAAIC,KAAM,sCAA5B,IACMC,EAAQF,IAAIC,KAAM,0CAExB,OACE,kBAAC,IAAD,CAAQE,SAAUF,KAAKG,MAAMD,UAC3B,kBAACE,EAAA,EAAD,CAAKlB,MAAM,YACX,yBAAKJ,UAAU,oBACX,yBAAKuB,MAAO,CAACC,QAAS,UAExB,yBAAKxB,UAAU,WACb,wBAAIA,UAAU,oBAAd,4BACA,yBAAKA,UAAWC,IAAOwB,WACpBN,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,yBAAKxB,IAAKwB,EAAK5B,MACb,kBAAC,EAAD,CAAcH,QAAS+B,a,GAjBnBC,IAAMC,WA6Bfd","file":"component---src-pages-blog-js-0816d5e6ac0deb1a6d67.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"blog-module--hero--3fUgF\",\"blog_list\":\"blog-module--blog_list--VXhcu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewTitle\":\"blog-list-module--previewTitle--A_cHE\",\"previewPublishDate\":\"blog-list-module--previewPublishDate--2q-DJ\",\"previewDescription\":\"blog-list-module--previewDescription--2QyI4\",\"alink\":\"blog-list-module--alink--2aG-o\",\"preview\":\"blog-list-module--preview--2xZhq\",\"tag\":\"blog-list-module--tag--3r1Ur\"};","import React from 'react'\r\nimport { Link, navigate } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\nimport styles from './blog-list.module.css'\r\n\r\nexport default ({ article }) => (\r\n    <a onClick={() => navigate(`/blog/${article.slug}`)} className={styles.alink} key={article.title}>\r\n        <div className={styles.preview} >\r\n            <h3 className={styles.previewTitle}>{article.title}</h3>\r\n            <small className={styles.previewPublishDate}>{article.publishDate}</small>\r\n            <div className={styles.previewDescription}\r\n            dangerouslySetInnerHTML={{\r\n                __html: article.description.childMarkdownRemark.html,\r\n            }} \r\n            />\r\n        </div>\r\n  </a>\r\n)\r\n","import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport Layout from '../components/layout'\r\nimport ArticleEntry from '../components/blog-list'\r\nimport SEO from '../components/SEO'\r\n\r\nimport styles from '../page-styles/blog.module.css'\r\n\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\r\n    const posts = get(this, 'props.data.allContentfulBlogPost.edges')\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <SEO title=\"Updates\"/>\r\n        <div className=\"white-background\">\r\n            <div style={{padding: \"20px\"}}></div>\r\n          {/* <div className={styles.hero}>Blog</div> */}\r\n          <div className=\"wrapper\">\r\n            <h2 className=\"section-headline\">All Updates and Articles</h2>\r\n            <div className={styles.blog_list}>\r\n              {posts.map(({ node }) => {\r\n                return (\r\n                  <div key={node.slug}>\r\n                    <ArticleEntry article={node}/>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const blogPageQuery = graphql`\r\n  query BlogIndexQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }, limit: 20) {\r\n      edges {\r\n        node {\r\n          title\r\n          slug\r\n          richTextBody {\r\n              json\r\n          }\r\n          publishDate(formatString: \"MMMM Do, YYYY\")      \r\n          description {\r\n            childMarkdownRemark {\r\n              html\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n //   heroImage {\r\n        //     fluid(maxWidth: 350, maxHeight: 196, resizingBehavior: SCALE) {\r\n        //       ...GatsbyContentfulFluid_tracedSVG\r\n        //     }\r\n        //   }"],"sourceRoot":""}